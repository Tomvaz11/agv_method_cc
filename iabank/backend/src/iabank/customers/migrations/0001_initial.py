# Generated by Django 4.2.24 on 2025-09-05 19:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import iabank.core.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nome completo do cliente",
                        max_length=255,
                        verbose_name="Nome Completo",
                    ),
                ),
                (
                    "document_number",
                    models.CharField(
                        help_text="CPF ou CNPJ do cliente",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Documento deve conter apenas números, pontos e traços",
                                regex="^[\\d.-]+$",
                            )
                        ],
                        verbose_name="CPF/CNPJ",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Nascimento"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefone deve conter apenas números, espaços, parênteses, traços e +",
                                regex="^[\\d\\s\\-\\(\\)\\+]+$",
                            )
                        ],
                        verbose_name="Telefone",
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="CEP"
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Logradouro"
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Número"
                    ),
                ),
                (
                    "complement",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Complemento",
                    ),
                ),
                (
                    "neighborhood",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Bairro"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Cidade"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AC", "Acre"),
                            ("AL", "Alagoas"),
                            ("AP", "Amapá"),
                            ("AM", "Amazonas"),
                            ("BA", "Bahia"),
                            ("CE", "Ceará"),
                            ("DF", "Distrito Federal"),
                            ("ES", "Espírito Santo"),
                            ("GO", "Goiás"),
                            ("MA", "Maranhão"),
                            ("MT", "Mato Grosso"),
                            ("MS", "Mato Grosso do Sul"),
                            ("MG", "Minas Gerais"),
                            ("PA", "Pará"),
                            ("PB", "Paraíba"),
                            ("PR", "Paraná"),
                            ("PE", "Pernambuco"),
                            ("PI", "Piauí"),
                            ("RJ", "Rio de Janeiro"),
                            ("RN", "Rio Grande do Norte"),
                            ("RS", "Rio Grande do Sul"),
                            ("RO", "Rondônia"),
                            ("RR", "Roraima"),
                            ("SC", "Santa Catarina"),
                            ("SP", "São Paulo"),
                            ("SE", "Sergipe"),
                            ("TO", "Tocantins"),
                        ],
                        max_length=2,
                        null=True,
                        verbose_name="Estado",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Observações gerais sobre o cliente",
                        null=True,
                        verbose_name="Observações",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_set",
                        to="core.tenant",
                        verbose_name="Tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "document_number"],
                        name="customers_c_tenant__0413ee_idx",
                    ),
                    models.Index(
                        fields=["tenant", "name"], name="customers_c_tenant__5b0286_idx"
                    ),
                    models.Index(
                        fields=["tenant", "is_active"],
                        name="customers_c_tenant__359dcd_idx",
                    ),
                ],
                "unique_together": {("tenant", "document_number")},
            },
            bases=(models.Model, iabank.core.models.BaseModelMixin),
        ),
    ]
